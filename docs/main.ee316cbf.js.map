{"version":3,"sources":["elements.js","Board.js","BoardUI.js","Timer.js","main.js"],"names":["mainMenu","exports","document","getElementById","instructions","game","board","startClassicButton","startCustomizedButton","exitInstructionsButton","restartButtons","Array","from","getElementsByClassName","dialogRestartButton","querySelector","returnButtons","customizationForm","validationErrMsgs","widthInput","lengthInput","minesInput","hourDisplay","minuteDisplay","secondDisplay","levelInfo","flaggedMinesInfo","emoji","endGameDialog","dialogMessage","elapsedTime","Object","defineProperty","value","default","_main","require","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","err","didErr","call","step","next","_e2","return","minLen","_arrayLikeToArray","prototype","toString","slice","constructor","name","test","arr","len","arr2","_typeof","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","t","_toPrimitive","r","toPrimitive","String","Number","_Board_instances","_Board_width","_Board_length","_Board_numMines","_Board_firstClick","_Board_mineCoords","_Board_flaggedMines","_Board_getRandomInt","_Board_generateMineCoords","_Board_placeMines","_Board_findAdjacentCells","_Board_areAllNotMineCellsChecked","_Board_checkAdjacentCells","_Board_handleMouseDown","__classPrivateFieldSet","receiver","state","kind","has","set","__classPrivateFieldGet","get","Board","width","numMines","add","bind","WeakMap","WeakSet","max","Math","floor","random","excludeX","excludeY","_this","mineCoords","_loop","x","y","some","coordinatePair","_step","_iterator","coordPair","cell","concat","setAttribute","innerHTML","adjacentCells","j","getAttribute","push","querySelectorAll","every","currentCell","_step2","numAdjacentMines","_iterator2","setOutcome","_a","_b","preventDefault","startTimer","button","coords","updateInfo","_default","_elements","BoardUI","mouseDownHandler","columnDiv","createElement","classList","_loop2","addEventListener","appendChild","totalMines","flaggedMines","textContent","_i","_mineCells","mode","outcome","time","classicEnd","showModal","remove","close","_Timer_instances","_Timer_minute","_Timer_second","_Timer_intervalId","_Timer_timer","_Timer_formatTime","_Timer_updateDisplays","Timer","reset","setInterval","clearInterval","input","_Board","_interopRequireDefault","_BoardUI","_Timer","obj","__esModule","classicDifficultyProgression","mines","level","pageMode","gameBoard","gameMode","classicDifficultyLevel","timer","validateCustomizedInputs","widthVal","lengthVal","minesVal","errMsgs","clearCustomizedInputErrMsgs","renderCustomizedInputErrMsgs","errMsg","errMsgItem","start","renderInfo","getNumMines","getFlaggedMines","pause","showAllMines","renderEndGameDialog","getTimeString","renderMain","clearBoardAndInfo","renderInitialBoard","getLength","getWidth","getHandleMouseDownFunction","boardDetails","forEach","resetEndGameDialog"],"mappings":"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","file":"main.ee316cbf.js","sourceRoot":"..\\src","sourcesContent":["// main containers\nexport const mainMenu = document.getElementById('main-menu');\nexport const instructions = document.getElementById('instructions');\nexport const game = document.getElementById('game');\nexport const board = document.getElementById('board');\n// all buttons\nexport const startClassicButton = document.getElementById('start-classic');\nexport const startCustomizedButton = document.getElementById('start-customized');\nexport const exitInstructionsButton = document.getElementById('exit-instructions');\nexport const restartButtons = Array.from(document.getElementsByClassName('restart'));\nexport const dialogRestartButton = document.querySelector('#end-game .restart');\nexport const returnButtons = Array.from(document.getElementsByClassName('return'));\n// customization form\nexport const customizationForm = document.querySelector('form');\nexport const validationErrMsgs = document.getElementById('validation-err-msgs');\nexport const widthInput = document.getElementById('width');\nexport const lengthInput = document.getElementById('length');\nexport const minesInput = document.getElementById('mines');\n// timer\nexport const hourDisplay = document.getElementById('hour');\nexport const minuteDisplay = document.getElementById('minute');\nexport const secondDisplay = document.getElementById('second');\n// info\nexport const levelInfo = document.getElementById('level');\nexport const flaggedMinesInfo = document.getElementById('flagged-mines');\nexport const emoji = document.getElementById('emoji');\n// end game dialog\nexport const endGameDialog = document.getElementById('end-game');\nexport const dialogMessage = document.getElementById('end-game-msg');\nexport const elapsedTime = document.getElementById('elapsed-time');\n","'use strict';\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Board_instances, _Board_width, _Board_length, _Board_numMines, _Board_firstClick, _Board_mineCoords, _Board_flaggedMines, _Board_getRandomInt, _Board_generateMineCoords, _Board_placeMines, _Board_findAdjacentCells, _Board_areAllNotMineCellsChecked, _Board_checkAdjacentCells, _Board_handleMouseDown;\nimport { startTimer, setOutcome, updateInfo } from \"./main\";\nclass Board {\n    constructor(width, length, numMines) {\n        _Board_instances.add(this);\n        _Board_width.set(this, 0);\n        _Board_length.set(this, 0);\n        _Board_numMines.set(this, 0);\n        _Board_firstClick.set(this, false);\n        _Board_mineCoords.set(this, []);\n        _Board_flaggedMines.set(this, 0);\n        __classPrivateFieldSet(this, _Board_width, width, \"f\");\n        __classPrivateFieldSet(this, _Board_length, length, \"f\");\n        __classPrivateFieldSet(this, _Board_numMines, numMines, \"f\");\n    }\n    getLength() { return __classPrivateFieldGet(this, _Board_length, \"f\"); }\n    getWidth() { return __classPrivateFieldGet(this, _Board_width, \"f\"); }\n    getNumMines() { return __classPrivateFieldGet(this, _Board_numMines, \"f\"); }\n    getMineCoords() { return __classPrivateFieldGet(this, _Board_mineCoords, \"f\"); }\n    getFlaggedMines() { return __classPrivateFieldGet(this, _Board_flaggedMines, \"f\"); }\n    getHandleMouseDownFunction() {\n        const boundHandleMouseDown = __classPrivateFieldGet(this, _Board_instances, \"m\", _Board_handleMouseDown).bind(this);\n        return boundHandleMouseDown;\n    }\n}\n_Board_width = new WeakMap(), _Board_length = new WeakMap(), _Board_numMines = new WeakMap(), _Board_firstClick = new WeakMap(), _Board_mineCoords = new WeakMap(), _Board_flaggedMines = new WeakMap(), _Board_instances = new WeakSet(), _Board_getRandomInt = function _Board_getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n}, _Board_generateMineCoords = function _Board_generateMineCoords(excludeX, excludeY) {\n    // creates an array with multiple subarrays, each subarray being the (x, y) coordinate of a mine\n    // avoids generating repeat coords and coord of first click button\n    let mineCoords = [];\n    for (let i = 0; i < __classPrivateFieldGet(this, _Board_numMines, \"f\"); i++) {\n        let x = -1;\n        let y = -1;\n        while (mineCoords.some(coordinatePair => coordinatePair[0] == x && coordinatePair[1] == y) ||\n            (x == -1 && y == -1) ||\n            (x == excludeX && y == excludeY)) {\n            x = __classPrivateFieldGet(this, _Board_instances, \"m\", _Board_getRandomInt).call(this, __classPrivateFieldGet(this, _Board_length, \"f\"));\n            y = __classPrivateFieldGet(this, _Board_instances, \"m\", _Board_getRandomInt).call(this, __classPrivateFieldGet(this, _Board_width, \"f\"));\n        }\n        ;\n        mineCoords[i] = [x, y];\n    }\n    __classPrivateFieldSet(this, _Board_mineCoords, mineCoords, \"f\");\n}, _Board_placeMines = function _Board_placeMines() {\n    for (const coordPair of __classPrivateFieldGet(this, _Board_mineCoords, \"f\")) {\n        const cell = document.querySelector(`[data-x = '${coordPair[0]}'][data-y = '${coordPair[1]}']`);\n        cell.setAttribute('data-type', 'mine');\n        cell.innerHTML = 'B'; // delete\n    }\n}, _Board_findAdjacentCells = function _Board_findAdjacentCells(x, y) {\n    // returns cells surrounding the current coods, as long as each cell is within bounds and has not yet been checked\n    let adjacentCells = [];\n    for (let i = (x - 1); i <= (x + 1); i++) {\n        // x outside of board\n        if (i < 0 || i > __classPrivateFieldGet(this, _Board_length, \"f\") - 1)\n            continue;\n        for (let j = (y - 1); j <= (y + 1); j++) {\n            // y outside of board\n            if (j < 0 || j > __classPrivateFieldGet(this, _Board_width, \"f\") - 1)\n                continue;\n            // current i and j match current cell's coords\n            if (i == x && j == y)\n                continue;\n            const cell = document.querySelector(`[data-x = '${i}'][data-y = '${j}']`);\n            // cell has already been checked\n            if ((cell === null || cell === void 0 ? void 0 : cell.getAttribute('data-status')) === 'unchecked')\n                adjacentCells.push(cell);\n        }\n    }\n    return adjacentCells;\n}, _Board_areAllNotMineCellsChecked = function _Board_areAllNotMineCellsChecked() {\n    const notMineCells = Array.from(document.querySelectorAll(`[data-type = 'notmine']`));\n    return notMineCells.every(cell => cell.getAttribute('data-status') === 'checked');\n}, _Board_checkAdjacentCells = function _Board_checkAdjacentCells(x, y) {\n    const currentCell = document.querySelector(`[data-x = '${x}'][data-y = '${y}']`);\n    currentCell.setAttribute('data-status', 'checked');\n    const adjacentCells = __classPrivateFieldGet(this, _Board_instances, \"m\", _Board_findAdjacentCells).call(this, x, y);\n    // calculate number of adjacent mines\n    let numAdjacentMines = 0;\n    for (const cell of adjacentCells) {\n        const cellType = cell.getAttribute('data-type');\n        if (cellType === 'mine')\n            numAdjacentMines++;\n    }\n    // base case\n    if (numAdjacentMines > 0) {\n        currentCell.innerHTML = String(numAdjacentMines);\n        currentCell.setAttribute('data-num-adj-mines', String(numAdjacentMines));\n    }\n    else {\n        for (let i = 0; i < adjacentCells.length; i++) {\n            let cell = adjacentCells[i];\n            if (cell.getAttribute('data-status') === 'unchecked')\n                __classPrivateFieldGet(this, _Board_instances, \"m\", _Board_checkAdjacentCells).call(this, Number(cell.getAttribute('data-x')), Number(cell.getAttribute('data-y')));\n        }\n    }\n    // check if all not mine cells are all checked --> end game\n    if (__classPrivateFieldGet(this, _Board_instances, \"m\", _Board_areAllNotMineCellsChecked).call(this)) {\n        setOutcome('win');\n    }\n}, _Board_handleMouseDown = function _Board_handleMouseDown(e, x, y) {\n    var _a, _b;\n    e.preventDefault();\n    // responsible for generating the mines on the first click\n    if (__classPrivateFieldGet(this, _Board_firstClick, \"f\") === false) {\n        __classPrivateFieldSet(this, _Board_firstClick, true, \"f\");\n        __classPrivateFieldGet(this, _Board_instances, \"m\", _Board_generateMineCoords).call(this, x, y);\n        __classPrivateFieldGet(this, _Board_instances, \"m\", _Board_placeMines).call(this);\n        startTimer();\n    }\n    const cell = document.querySelector(`[data-x = '${x}'][data-y = '${y}']`);\n    // handle right click - cycle between unchecked, flag, and question\n    if (e.button === 2) {\n        switch (cell === null || cell === void 0 ? void 0 : cell.getAttribute('data-status')) {\n            case 'unchecked':\n                cell.setAttribute('data-status', 'flag');\n                if (__classPrivateFieldGet(this, _Board_mineCoords, \"f\").some(coords => coords[0] === x && coords[1] === y)) {\n                    __classPrivateFieldSet(this, _Board_flaggedMines, (_a = __classPrivateFieldGet(this, _Board_flaggedMines, \"f\"), _a++, _a), \"f\");\n                    updateInfo();\n                }\n                break;\n            case 'flag':\n                cell.setAttribute('data-status', 'question');\n                if (__classPrivateFieldGet(this, _Board_mineCoords, \"f\").some(coords => coords[0] === x && coords[1] === y)) {\n                    __classPrivateFieldSet(this, _Board_flaggedMines, (_b = __classPrivateFieldGet(this, _Board_flaggedMines, \"f\"), _b--, _b), \"f\");\n                    updateInfo();\n                }\n                break;\n            case 'question':\n                cell.setAttribute('data-status', 'unchecked');\n                break;\n        }\n        // handle left click - game over if mine\n    }\n    else if (e.button === 0) {\n        // guard clause\n        if ((cell === null || cell === void 0 ? void 0 : cell.getAttribute('data-status')) !== 'unchecked')\n            return;\n        if ((cell === null || cell === void 0 ? void 0 : cell.getAttribute('data-type')) === 'mine') {\n            setOutcome('lose');\n        }\n        else {\n            __classPrivateFieldGet(this, _Board_instances, \"m\", _Board_checkAdjacentCells).call(this, x, y);\n        }\n    }\n};\nexport default Board;\n","import { board, flaggedMinesInfo, endGameDialog, dialogMessage, elapsedTime, dialogRestartButton, emoji } from './elements';\nexport default class BoardUI {\n    static renderInitialBoard(length, width, mouseDownHandler) {\n        for (let x = 0; x < length; x++) {\n            let columnDiv = document.createElement('div');\n            columnDiv.classList.add('row');\n            for (let y = 0; y < width; y++) {\n                // creating element and setting key attributes\n                const cell = document.createElement('button');\n                cell.setAttribute('data-x', String(x));\n                cell.setAttribute('data-y', String(y));\n                cell.setAttribute('data-status', 'unchecked'); // unchecked, checked, flag, question\n                cell.setAttribute('data-type', 'notmine'); // mine, notmine\n                cell.addEventListener('mousedown', (e) => mouseDownHandler(e, x, y));\n                columnDiv.appendChild(cell);\n            }\n            board.appendChild(columnDiv);\n        }\n    }\n    static renderInfo(totalMines, flaggedMines) {\n        flaggedMinesInfo.textContent = `${flaggedMines}/${totalMines}`;\n    }\n    static showAllMines() {\n        const mineCells = Array.from(document.querySelectorAll(`[data-type = 'mine']`));\n        for (const mineCell of mineCells)\n            mineCell.setAttribute('data-status', 'bomb-reveal');\n    }\n    static clearBoardAndInfo() {\n        board.innerHTML = '';\n        flaggedMinesInfo.textContent = '';\n    }\n    static renderEndGameDialog(mode, outcome, time, classicEnd) {\n        if (outcome === 'lose')\n            emoji.classList.add('dead');\n        dialogMessage.textContent =\n            outcome === 'lose' ? 'You exploded...' :\n                classicEnd === false ? 'You survived!' : 'You made it through all the levels. Congrats!';\n        elapsedTime.textContent = `Elapsed time: ${time}`;\n        if (classicEnd) {\n            dialogRestartButton.classList.add('hidden');\n        }\n        else {\n            dialogRestartButton.textContent =\n                mode === 'customized' ? 'Replay' :\n                    outcome === 'win' ? 'Next level' : 'Replay level';\n        }\n        endGameDialog.showModal();\n    }\n    static resetEndGameDialog() {\n        emoji.classList.remove('dead');\n        dialogMessage.textContent = '';\n        elapsedTime.textContent = '';\n        dialogRestartButton.classList.remove('hidden');\n        dialogRestartButton.textContent = '';\n        endGameDialog.close();\n    }\n}\n","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Timer_instances, _Timer_minute, _Timer_second, _Timer_intervalId, _Timer_timer, _Timer_formatTime, _Timer_updateDisplays;\nimport { minuteDisplay, secondDisplay } from './elements';\nclass Timer {\n    constructor() {\n        _Timer_instances.add(this);\n        _Timer_minute.set(this, 0);\n        _Timer_second.set(this, 0);\n        _Timer_intervalId.set(this, void 0);\n    }\n    start() {\n        this.reset();\n        __classPrivateFieldSet(this, _Timer_intervalId, setInterval(() => __classPrivateFieldGet(this, _Timer_instances, \"m\", _Timer_timer).call(this), 1000), \"f\");\n    }\n    pause() {\n        clearInterval(__classPrivateFieldGet(this, _Timer_intervalId, \"f\"));\n    }\n    reset() {\n        clearInterval(__classPrivateFieldGet(this, _Timer_intervalId, \"f\"));\n        __classPrivateFieldSet(this, _Timer_minute, 0, \"f\");\n        __classPrivateFieldSet(this, _Timer_second, 0, \"f\");\n        __classPrivateFieldGet(this, _Timer_instances, \"m\", _Timer_updateDisplays).call(this);\n    }\n    getTimeString() {\n        return `${__classPrivateFieldGet(this, _Timer_minute, \"f\") > 0 ? `${Number(__classPrivateFieldGet(this, _Timer_minute, \"f\"))} minute${__classPrivateFieldGet(this, _Timer_minute, \"f\") > 1 ? 's' : ''}, ` : ''}${Number(__classPrivateFieldGet(this, _Timer_second, \"f\"))} second${__classPrivateFieldGet(this, _Timer_second, \"f\") != 1 ? 's' : ''}`;\n    }\n}\n_Timer_minute = new WeakMap(), _Timer_second = new WeakMap(), _Timer_intervalId = new WeakMap(), _Timer_instances = new WeakSet(), _Timer_timer = function _Timer_timer() {\n    var _a;\n    if ((__classPrivateFieldSet(this, _Timer_second, __classPrivateFieldGet(this, _Timer_second, \"f\") + 1, \"f\")) == 60) {\n        __classPrivateFieldSet(this, _Timer_second, 0, \"f\");\n        __classPrivateFieldSet(this, _Timer_minute, (_a = __classPrivateFieldGet(this, _Timer_minute, \"f\"), _a++, _a), \"f\");\n    }\n    __classPrivateFieldGet(this, _Timer_instances, \"m\", _Timer_updateDisplays).call(this);\n}, _Timer_formatTime = function _Timer_formatTime(input) {\n    return input >= 10 ? String(input) : `0${input}`;\n}, _Timer_updateDisplays = function _Timer_updateDisplays() {\n    minuteDisplay.textContent = __classPrivateFieldGet(this, _Timer_instances, \"m\", _Timer_formatTime).call(this, __classPrivateFieldGet(this, _Timer_minute, \"f\"));\n    secondDisplay.textContent = __classPrivateFieldGet(this, _Timer_instances, \"m\", _Timer_formatTime).call(this, __classPrivateFieldGet(this, _Timer_second, \"f\"));\n};\nexport default Timer;\n","'use strict';\nimport { mainMenu, startClassicButton, startCustomizedButton, restartButtons, returnButtons, instructions, game, customizationForm, validationErrMsgs, widthInput, lengthInput, minesInput, endGameDialog, levelInfo, exitInstructionsButton } from \"./elements\";\nimport Board from \"./Board\";\nimport BoardUI from \"./BoardUI\";\nimport Timer from \"./Timer\";\ndocument.addEventListener('contextmenu', e => e.preventDefault(), false);\nconst classicDifficultyProgression = [\n    { width: 10, length: 10, mines: 10, level: 'Easy #1' },\n    { width: 9, length: 9, mines: 9, level: 'Easy #2' },\n    { width: 8, length: 8, mines: 10, level: 'Easy #3' },\n    { width: 16, length: 16, mines: 40, level: 'Intermediate #1' },\n    { width: 15, length: 15, mines: 40, level: 'Intermediate #2' },\n    { width: 14, length: 14, mines: 40, level: 'Intermediate #3' },\n    { width: 16, length: 30, mines: 99, level: 'Expert' },\n];\nlet pageMode = 'main';\nlet gameBoard = null;\nlet gameMode = 'classic';\nlet classicDifficultyLevel = 0;\nlet timer = new Timer();\nlet width = 0;\nlet length = 0;\nlet mines = 0;\n// LOGIC\nfunction validateCustomizedInputs(widthVal, lengthVal, minesVal) {\n    // generates error message array and, if valid, stores values\n    const errMsgs = [];\n    if (widthVal <= 0 || widthVal > 30)\n        errMsgs.push('Width must be between 1 and 30 cells.');\n    if (lengthVal <= 0 || lengthVal > 30)\n        errMsgs.push('Length must be between 1 and 30 cells.');\n    if (minesVal <= 0 || minesVal >= widthVal * lengthVal)\n        errMsgs.push('Number of mines must be greater than 0 and less than the total number of cells.');\n    if (errMsgs.length === 0) {\n        width = widthVal;\n        length = lengthVal;\n        mines = minesVal;\n    }\n    return errMsgs;\n}\n// UI\nfunction clearCustomizedInputErrMsgs() {\n    validationErrMsgs.innerHTML = '';\n}\n// UI\nfunction renderCustomizedInputErrMsgs(errMsgs) {\n    for (const errMsg of errMsgs) {\n        const errMsgItem = document.createElement('p');\n        errMsgItem.textContent = errMsg;\n        validationErrMsgs.appendChild(errMsgItem);\n    }\n}\nexport function startTimer() {\n    timer.start();\n}\nexport function updateInfo() {\n    if (gameBoard)\n        BoardUI.renderInfo(gameBoard.getNumMines(), gameBoard.getFlaggedMines());\n}\nexport function setOutcome(outcome) {\n    timer.pause();\n    BoardUI.showAllMines();\n    if (gameMode === 'classic' && outcome === 'win')\n        classicDifficultyLevel++;\n    if (gameMode === 'classic' && classicDifficultyLevel > classicDifficultyProgression.length) {\n        BoardUI.renderEndGameDialog(gameMode, outcome, timer.getTimeString(), true);\n    }\n    else {\n        BoardUI.renderEndGameDialog(gameMode, outcome, timer.getTimeString(), false);\n    }\n}\nstartClassicButton.addEventListener('click', () => {\n    gameMode = 'classic';\n    const boardDetails = classicDifficultyProgression[classicDifficultyLevel];\n    gameBoard = new Board(boardDetails.width, boardDetails.length, boardDetails.mines);\n    pageMode = 'instructions';\n    renderMain();\n});\nstartCustomizedButton.addEventListener('click', () => {\n    clearCustomizedInputErrMsgs();\n    const errMsgs = validateCustomizedInputs(Number(widthInput.value), Number(lengthInput.value), Number(minesInput.value));\n    if (errMsgs.length > 0) {\n        renderCustomizedInputErrMsgs(errMsgs);\n        return;\n    }\n    gameMode = 'customized';\n    customizationForm === null || customizationForm === void 0 ? void 0 : customizationForm.reset();\n    gameBoard = new Board(width, length, mines);\n    pageMode = 'instructions';\n    renderMain();\n});\nexitInstructionsButton.addEventListener('click', () => {\n    pageMode = 'game';\n    renderMain();\n});\nrestartButtons.forEach(button => button.addEventListener('click', () => {\n    if (gameMode === 'classic') {\n        const boardDetails = classicDifficultyProgression[classicDifficultyLevel];\n        gameBoard = new Board(boardDetails.width, boardDetails.length, boardDetails.mines);\n    }\n    if (gameMode === 'customized')\n        gameBoard = new Board(width, length, mines);\n    BoardUI.resetEndGameDialog();\n    endGameDialog.close();\n    renderMain();\n}));\nreturnButtons.forEach(button => button.addEventListener('click', () => {\n    if (gameMode === 'classic')\n        classicDifficultyLevel = 0;\n    BoardUI.resetEndGameDialog();\n    pageMode = 'main';\n    renderMain();\n}));\nfunction renderMain() {\n    timer.reset();\n    BoardUI.clearBoardAndInfo();\n    switch (pageMode) {\n        case 'main':\n            mainMenu.classList.remove('hidden');\n            instructions.classList.add('hidden');\n            game.classList.add('hidden');\n            break;\n        case 'instructions':\n            mainMenu.classList.add('hidden');\n            instructions.classList.remove('hidden');\n            game.classList.add('hidden');\n            break;\n        case 'game':\n            mainMenu.classList.add('hidden');\n            instructions.classList.add('hidden');\n            game.classList.remove('hidden');\n            if (gameBoard) {\n                BoardUI.renderInitialBoard(gameBoard.getLength(), gameBoard.getWidth(), gameBoard.getHandleMouseDownFunction());\n                levelInfo.textContent = gameMode === 'classic' ? classicDifficultyProgression[classicDifficultyLevel].level : '';\n                updateInfo();\n            }\n            break;\n    }\n}\nrenderMain();\n"]}